# File: password_tools.py

import random
import string
import hashlib

def generate_password(length=12, uppercase=True, lowercase=True, digits=True, symbols=True):
    characters = []
    
    if uppercase:
        characters.extend(string.ascii_uppercase)
    if lowercase:
        characters.extend(string.ascii_lowercase)
    if digits:
        characters.extend(string.digits)
    if symbols:
        characters.extend(string.punctuation)
    
    if not any([uppercase, lowercase, digits, symbols]):
        raise ValueError("At least one character type (uppercase, lowercase, digits, symbols) must be enabled.")
    
    password = ''.join(random.choice(characters) for _ in range(length))
    return password

def hash_password(password):
    password_bytes = password.encode('utf-8')
    hash_object = hashlib.sha256()
    hash_object.update(password_bytes)
    hashed_password = hash_object.hexdigest()
    return hashed_password

def save_to_wordlist(password):
    with open('wordlist.txt', 'a') as file:
        file.write(password + '\n')

# Example usage:
if __name__ == "__main__":
    num_passwords = 10  # Number of passwords to generate and save
    
    for _ in range(num_passwords):
        generated_password = generate_password(length=12, uppercase=True, lowercase=True, digits=True, symbols=True)
        print("Generated Password:", generated_password)

        hashed_password = hash_password(generated_password)
        print("Hashed Password:", hashed_password)
        
        save_to_wordlist(generated_password)  # Save generated password to wordlist.txt
